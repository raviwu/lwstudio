<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>parse on Ravi Wu</title>
    <link>https://raviwu.github.io/tags/parse/</link>
    <description>Recent content in parse on Ravi Wu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 24 Jun 2016 05:05:44 +0800</lastBuildDate><atom:link href="https://raviwu.github.io/tags/parse/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 rails 上實作轉移 Parse 手機推播服務到 Amazon SNS</title>
      <link>https://raviwu.github.io/migrate-push-notification-from-parse-to-aws-sns/</link>
      <pubDate>Fri, 24 Jun 2016 05:05:44 +0800</pubDate>
      
      <guid>https://raviwu.github.io/migrate-push-notification-from-parse-to-aws-sns/</guid>
      <description>簡要說明 為了避免使用者因服務轉換而被迫強制更新，移轉過程採用漸進方式。
如果不需要如此痛苦的同時使用兩種服務的捧油，可以參考 這一篇的實作，直接用 AWS Mobile Hub 的服務做批次資料移轉。
由於在轉換期需要同時支援兩邊服務運作，又要避免使用者重複收到相同的推播，需要實作「對同一裝置擇一服務進行推播」。本篇實作的概念是，使用者只有在用新版本的 APP 登入時，伺服器才會從 APP 取得 device_token 去註冊 Amazon SNS endpoint_arn，同時刪除 Parse 服務上的使用者的所有 Installation 紀錄。
Parse 跟 Amazon SNS 的 API 邏輯有些不同，主要差別在於，Parse 只需要在同一 request 裡就可以達到「推播給符合某條件的 channels 組合，並且可以指定其中的特定 users 組合」，但是 Amazon 的推播就是 topic_arn / target_arn 兩種，要收到 topic_arn 的話要先讓 endpoint_arn 訂閱特定的 topic_arn，而 target_arn 則是一個 request 只能推播給單一 target_arn (endpoint_arn)。
開發步驟  打包一隻 AmazonSnsWrapper 把 Amazon SDK 提供的 method 客製成符合需求的介面，專門負責跟 Amazon server 溝通。 新增 AmazonSnsInfo Model 以記錄使用者的 SNS 訂閱狀況。 新增 ParseInstallationWrapper 打包 Parse RESTful API 裡的 method，查詢使用者之前透過 APP 註冊的 Installations，並且刪除已經成功轉換到 Amazon SNS 的 Installation。 新增 update_push_subscription / logout API 來針對 APP 傳送的 device_token 做各種 push subscription / unsubscription 的操作。 新增 PushServicesWrapper 把所有 Push 行為的邏輯打包在一起方便做服務切換。  一、 AmazonSnsWrapper 首先，我們得先建好 Amazon SNS 服務中 endpoint_arn / topic_arn / subscription_arn 新增、查詢、訂閱與刪除等機制，我習慣把第三方 API 的互動包成一個 Ruby Class 方便測試跟管理，建一個 AmazonSnsWrapper 來打包 SDK 相關的程式碼。</description>
    </item>
    
  </channel>
</rss>
